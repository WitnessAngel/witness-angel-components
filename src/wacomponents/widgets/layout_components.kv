# BEWARE, force-import necessary KivyMD classes here so that their styles are well applied BEFORE our!
#: import OneLineAvatarIconListItem kivymd.uix.list.OneLineAvatarIconListItem
#: import MDRectangleFlatIconButton kivymd.uix.button.MDRectangleFlatIconButton


## Structure of a Screen ##

# Scrollview for a whole Screen, mainly for security
<WAMainVerticalScrollView@ScrollView>:
    do_scroll_x: False
    do_scroll_y: True
    bar_width: 5
    scroll_type: ["bars", "content"]

# Inner scrollview, with bar always clearly visible if present
<WAVerticalScrollView@WAMainVerticalScrollView>:
    bar_width: 5
    bar_inactive_color: self.bar_color

# Main layout of each view, to place both fixed-height and relative-height components
<WAVerticalPanel@MDGridLayout>:
    size_hint_x: 1
    cols: 1

# Top toolbar of each Screen
<WAToolbar@MDTopAppBar>:
    elevation: 8
    shadow_softness: 20
    shadow_softness_size: 4

# Some kind of explanatory title on top of each view
<WAElevatedBoxLayout@CommonElevationBehavior+MDBoxLayout>:
    elevation: 3
    shadow_softness: 10
    shadow_softness_size: 2
    height: dp(40)
    size_hint_y: None
    md_bg_color: app.theme_cls.bg_light

# Bottom panel with 2 columns of action buttons
<WAButtonsGridLayout@MDGridLayout>:
    cols: 2
    size_hint_x: 3
    size_hint_y: None
    height: self.minimum_height
    spacing: 10
    padding: [10, 0]

# Recycleview with better scroll bar and vertical layout
<WARecycleView@RecycleView>:
    bar_width: 5
    RecycleBoxLayout:
        default_size: None, None
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'


# Buttons for important actions like import/export/delete etc.
<WAOperationButton@MDRectangleFlatIconButton>:
    # The doc says "You cannot use the ``size_hint_x`` parameter for `KivyMD` buttons"
    # Actually we can, but beware, this can create buggy "Clock iterations" if not on current Screen
    # size_hint_x: 1  # Set it at last moment later, when needed
    theme_icon_color: "Primary"
    halign: "left"


# Custom Settings panel, without duplicated top title

<-SettingsPanel>:
    spacing: 5
    padding: 5
    size_hint_y: None
    height: self.minimum_height

<SettingStringTruncated>:
    Label:
        text: root.value or ''
        text_size: self.width, None
        shorten: True
        pos: root.pos
        font_size: '15sp'

## List items ##

<WAListItemLeftCheckbox@ILeftBodyTouch+MDCheckbox>:

<WASelectableListItemEntry@RecycleDataViewBehavior+OneLineAvatarIconListItem>: # FIXME improve naming
    text: ""
    ###selected: selection_checkbox.active

    unique_identifier: None  # Useful for UIDs, filenames and such
    information_callback: None
    selection_callback: None
    selected_unique_identifiers: None

    WAListItemLeftCheckbox:
        id: selection_checkbox
        active: bool(root.unique_identifier and root.selected_unique_identifiers and root.unique_identifier in root.selected_unique_identifiers)
        on_active: root.selection_callback(root.unique_identifier, *args)

    IconRightWidget:
        icon: "information-outline"
        id: information_icon
        # FIXME make information_callback argument-less here like everywhere
        on_press: root.information_callback(root.unique_identifier)


# FIXME rename, not for claimant only
<WAClaimantAuthorizationRequestListItemEntry@RecycleDataViewBehavior+TwoLineAvatarIconListItem>:
    text: ""
    secondary_text: ""

    IconLeftWidget:
        icon: "file-arrow-left-right"

    IconRightWidget:
        icon: "arrow-right-bold-hexagon-outline"
        id: information_icon
        on_press: root.information_callback()


<WAIconListItemEntry@TwoLineAvatarIconListItem>:  # FIXME wrong naming, its' always a KEY here, and 2 LINES now!
    text: ""
    information_callback: None

    IconLeftWidget:
        icon: "key"

    IconRightWidget:
        id: information_icon
        icon: "information-outline"
        on_press: root.information_callback() if root.information_callback else None


# FIXME do these belong here really?

<WAListItemEntry@OneLineListItem>:
    text: ""
    unique_identifier: None  # Useful for UIDs and such

<WAThreeListItemEntry@ThreeLineAvatarIconListItem>:  # FIXME wrong naming
    text: ""
    secondary_text: ""
    tertiary_text: ""

    IconLeftWidget:
        icon: "key-outline"

    IconRightWidget:
        icon: "information-outline"
        id: information_icon

## Label widgets ##

<WALabel@MDLabel>:
    font_style: "H6"
    font_size: "18sp"

<WABigInformationBox@MDLabel>:
    message: ""
    id: inner_label
    halign: "center"
    valign: "middle"
    font_size: "20sp"
    text: root.message

<WATextInput@TextInput>:
    padding: [10,10]
    halign: "left"
    background_color: app.theme_cls.bg_normal

    readonly: True
    # Modified from kivy/data/style.kv
    canvas.before:
        # Clear (can be used to remove legacy canvas instructions)
        Color:
            rgba: self.background_color
        Rectangle:
            pos: self.pos
            size: self.size
        Color:
            rgba:
                (self.cursor_color
                if self.focus and not self._cursor_blink
                else (0, 0, 0, 0))
        Rectangle:
            pos: self._cursor_visual_pos
            size: root.cursor_width, -self._cursor_visual_height
        Color:
            rgba: self.disabled_foreground_color if self.disabled else (self.hint_text_color if not self.text else self.foreground_color)


<-WASelectableLabel>:
    full_height: True
    size_hint: 1, None
    height: max((len(self._lines)+1) * self.line_height, self.parent.height) if self.full_height else ((len(self._lines)+1) * self.line_height)
    padding: [10,10]
    halign: "left"
    background_color: app.theme_cls.bg_normal
    multiline: True
    # This seems only effective when inputting text:
    auto_indent: True
    do_wrap: True

    readonly: True
    # Modified from kivy/data/style.kv
    canvas.before:
        # Clear (can be used to remove legacy canvas instructions)
        Color:
            rgba: self.background_color
        Rectangle:
            pos: self.pos
            size: self.size
        Color:
            rgba:
                (self.cursor_color
                if self.focus and not self._cursor_blink
                else (0, 0, 0, 0))
        Rectangle:
            pos: self._cursor_visual_pos
            size: root.cursor_width, -self._cursor_visual_height
        Color:
            rgba: self.disabled_foreground_color if self.disabled else (self.hint_text_color if not self.text else self.foreground_color)


## Separator helpers ##

<Separator@Widget>:
    canvas:
        Color:
            rgba: 1, 1, 1, 0
        Rectangle:
            pos: self.pos
            size: self.size

<VSeparator@Separator>:
    size_hint_y: None
    height: 20

<HSeparator@Separator>:
    size_hint_x: None
    width: 20

